import os
import csv
import argparse
import pathlib
import zipfile
import shutil

"""'Prepare submission files for the VIPER benchmark ("https://playing-for-benchmarks.org").'"""

def _get_flow_test_frames():
	return ['001_00001', '001_00094', '001_00147', '001_00210', '001_00232', '001_00258', '001_00277', '001_00322', '001_00364', '001_00421', '001_00450', '001_00502', '002_00110', '002_00127', '002_00175', '002_00220', '003_00029', '003_00048', '003_00074', '003_00108', '003_00152', '004_00001', '004_00018', '004_00035', '004_00053', '004_00085', '004_00102', '004_00123', '004_00139', '004_00164', '004_00197', '004_00226', '004_00277', '004_00300', '004_00326', '004_00371', '004_00390', '004_00411', '004_00505', '004_00527', '004_00546', '004_00563', '004_00587', '004_00638', '004_00668', '004_00685', '004_00701', '004_00724', '004_00741', '004_00758', '004_00774', '004_00804', '004_00862', '004_00883', '004_00899', '004_00926', '004_00968', '004_00985', '004_01002', '004_01020', '004_01037', '004_01059', '004_01078', '004_01103', '004_01132', '004_01154', '004_01179', '004_01203', '004_01272', '004_01323', '004_01342', '004_01360', '004_01380', '004_01398', '004_01414', '004_01438', '006_00024', '006_00087', '006_00108', '006_00139', '006_00205', '006_00225', '006_00258', '006_00295', '006_00314', '006_00408', '006_00429', '006_00500', '006_00544', '006_00618', '006_00650', '006_00671', '006_00727', '006_00770', '006_00793', '006_00813', '006_00847', '006_00878', '006_00952', '006_00995', '006_01059', '006_01100', '006_01130', '006_01166', '006_01207', '006_01248', '006_01283', '006_01308', '006_01344', '006_01382', '006_01420', '006_01438', '006_01467', '006_01496', '006_01531', '006_01550', '006_01572', '006_01592', '006_01642', '006_01658', '006_01691', '006_01714', '006_01740', '006_01774', '007_00001', '007_00069', '007_00110', '007_00136', '007_00155', '007_00178', '007_00260', '007_00306', '007_00372', '007_00416', '007_00440', '007_00473', '007_00491', '008_00041', '008_00070', '008_00171', '008_00189', '008_00216', '008_00236', '008_00256', '008_00272', '008_00291', '008_00409', '008_00425', '008_00442', '008_00460', '008_00486', '008_00572', '008_00652', '008_00672', '008_00693', '008_00711', '008_00731', '008_00748', '008_00778', '008_00798', '008_00818', '008_00835', '008_00854', '008_00888', '008_00907', '008_01002', '008_01024', '008_01040', '008_01074', '008_01092', '008_01117', '008_01134', '008_01153', '009_00002', '009_00036', '009_00122', '009_00145', '009_00168', '009_00206', '009_00252', '009_00303', '009_00336', '009_00360', '009_00380', '009_00399', '009_00436', '009_00466', '009_00485', '009_00502', '009_00520', '009_00539', '009_00559', '009_00577', '009_00606', '009_00670', '009_00694', '009_00732', '010_00014', '010_00030', '010_00051', '010_00073', '010_00118', '010_00155', '010_00181', '010_00212', '010_00261', '010_00291', '010_00323', '010_00368', '010_00393', '010_00418', '010_00487', '010_00523', '010_00545', '010_00565', '010_00628', '010_00657', '010_00682', '010_00744', '010_00822', '010_00840', '010_00873', '010_00904', '010_00920', '010_00946', '010_00963', '010_00981', '010_01001', '010_01022', '010_01040', '010_01064', '010_01111', '010_01142', '010_01163', '010_01181', '010_01202', '010_01251', '010_01291', '010_01308', '010_01329', '010_01345', '010_01363', '010_01383', '010_01411', '010_01434', '010_01468', '010_01486', '010_01502', '010_01519', '010_01542', '010_01574', '010_01604', '010_01630', '010_01649', '010_01669', '010_01687', '010_01712', '010_01731', '010_01747', '011_00003', '011_00097', '011_00131', '011_00153', '011_00173', '011_00222', '011_00241', '011_00260', '011_00280', '011_00377', '011_00413', '011_00430', '011_00446', '011_00466', '011_00554', '011_00581', '011_00625', '011_00710', '011_00754', '011_00791', '012_00005', '012_00042', '012_00074', '012_00106', '012_00126', '012_00151', '012_00187', '012_00216', '012_00234', '012_00251', '012_00307', '012_00327', '012_00354', '012_00381', '012_00400', '012_00416', '012_00443', '012_00482', '012_00552', '012_00568', '012_00601', '012_00621', '012_00646', '012_00702', '012_00718', '012_00746', '012_00777', '012_00793', '012_00819', '012_00842', '012_00877', '012_00906', '012_00922', '012_00940', '012_00957', '012_00983', '012_01009', '012_01034', '012_01052', '012_01092', '012_01110', '013_00032', '013_00052', '013_00095', '013_00112', '013_00133', '013_00152', '013_00184', '013_00224', '013_00240', '013_00275', '013_00298', '013_00319', '013_00347', '013_00366', '013_00398', '013_00415', '013_00437', '013_00460', '013_00483', '013_00500', '013_00536', '013_00554', '013_00584', '013_00604', '013_00627', '013_00723', '013_00780', '013_00798', '013_00818', '013_00838', '013_00860', '013_00876', '013_00896', '013_00929', '013_00971', '013_00987', '013_01026', '013_01045', '013_01063', '013_01083', '013_01101', '013_01118', '013_01144', '014_00021', '014_00046', '014_00062', '014_00096', '014_00121', '014_00137', '014_00153', '014_00190', '014_00246', '014_00268', '014_00285', '014_00301', '014_00329', '014_00358', '014_00382', '014_00402', '014_00427', '014_00445', '014_00462', '014_00484', '014_00513', '014_00538', '014_00561', '014_00589', '014_00609', '014_00631', '014_00655', '014_00683', '014_00707', '014_00728', '014_00747', '014_00768', '014_00797', '014_00826', '014_00846', '014_00865', '014_00885', '014_00907', '014_00935', '014_00960', '014_00988', '014_01007', '014_01032', '014_01055', '014_01072', '014_01090', '014_01113', '014_01133', '014_01158', '014_01177', '014_01194', '014_01216', '014_01240', '014_01256', '014_01274', '014_01295', '014_01321', '014_01377', '014_01394', '014_01415', '014_01437', '014_01463', '014_01507', '014_01532', '014_01557', '014_01585', '014_01609', '015_00016', '015_00038', '015_00100', '015_00137', '015_00167', '015_00184', '015_00236', '015_00325', '015_00352', '015_00539', '015_00569', '015_00593', '015_00617', '015_00636', '015_00665', '015_00681', '015_00715', '015_00741', '015_00779', '015_00813', '015_00848', '015_00879', '015_00903', '016_00005', '016_00024', '016_00076', '016_00128', '016_00179', '016_00203', '017_00063', '017_00089', '017_00117', '017_00142', '017_00159', '017_00177', '017_00194', '017_00210', '017_00233', '017_00257', '017_00288', '017_00304', '017_00321', '017_00339', '017_00356', '017_00379', '017_00430', '017_00509', '017_00541', '017_00560', '017_00596', '017_00617', '017_00633', '017_00654', '017_00676', '017_00698', '017_00739', '017_00760', '017_00779', '017_00795', '017_00815', '017_00834', '017_00866', '017_00928', '017_00949', '017_00970', '017_00993', '017_01011', '017_01031', '017_01062', '017_01086', '017_01126', '017_01143', '017_01171', '017_01224', '017_01241', '017_01259', '017_01290', '017_01318', '017_01348', '017_01413', '017_01429', '017_01455', '017_01480', '017_01509', '017_01537', '017_01566', '017_01584', '017_01602', '017_01621', '018_00004', '018_00023', '018_00040', '018_00091', '018_00115', '018_00138', '018_00170', '018_00186', '018_00260', '018_00283', '018_00316', '018_00344', '018_00373', '018_00395', '018_00451', '018_00472', '018_00494', '018_00511', '018_00548', '018_00573', '018_00591', '018_00618', '018_00649', '018_00666', '018_00720', '018_00751', '018_00769', '018_00803', '018_00825', '018_00856', '018_00874', '018_00898', '019_00026', '019_00045', '019_00140', '019_00174', '019_00214', '019_00248', '019_00265', '019_00303', '019_00338', '019_00356', '019_00381', '019_00403', '019_00434', '019_00619', '019_00732', '019_00802', '019_00838', '019_00960', '019_01183', '019_01202', '019_01231', '019_01261', '019_01293', '019_01321', '019_01360', '019_01383', '019_01414', '020_00034', '020_00064', '020_00087', '020_00110', '020_00132', '020_00165', '020_00239', '020_00256', '020_00273', '020_00320', '020_00346', '020_00389', '020_00409', '020_00435', '020_00461', '020_00488', '020_00517', '020_00534', '020_00553', '020_00580', '020_00607', '020_00626', '020_00642', '020_00659', '020_00675', '020_00692', '020_00710', '020_00727', '021_00007', '021_00047', '021_00070', '021_00103', '021_00135', '021_00169', '021_00193', '022_00043', '022_00069', '022_00093', '022_00127', '022_00146', '022_00168', '022_00199', '022_00222', '022_00260', '022_00276', '022_00303', '022_00324', '022_00340', '022_00365', '022_00387', '022_00403', '022_00420', '022_00465', '022_00481', '022_00498', '022_00520', '022_00541', '022_00563', '022_00593', '022_00609', '022_00629', '022_00646', '022_00712', '022_00767', '022_00791', '022_00807', '022_00823', '022_00840', '022_00858', '022_00883', '022_00914', '022_00941', '022_00970', '022_00987', '022_01003', '022_01020', '022_01041', '022_01068', '022_01091', '022_01117', '022_01137', '022_01155', '022_01171', '022_01189', '022_01219', '022_01241', '022_01258', '022_01278', '022_01294', '022_01317', '022_01337', '022_01368', '022_01398', '022_01415', '022_01438', '022_01465', '022_01481', '022_01497', '022_01519', '022_01537', '022_01562', '022_01581', '022_01611', '022_01630', '022_01646', '022_01666', '022_01682', '022_01705', '022_01725', '022_01748', '022_01769', '022_01785', '022_01803', '022_01830', '022_01852', '022_01880', '022_01898', '022_01918', '022_01935', '022_01953', '022_01970', '022_01987', '022_02033', '022_02053', '022_02071', '022_02094', '022_02116', '022_02133', '022_02155', '022_02177', '023_00002', '023_00022', '023_00040', '023_00065', '023_00110', '023_00131', '023_00151', '023_00167', '023_00184', '023_00212', '023_00228', '023_00245', '023_00263', '023_00286', '023_00319', '023_00337', '023_00361', '023_00378', '023_00405', '023_00422', '023_00441', '023_00457', '023_00478', '023_00501', '023_00522', '023_00552', '023_00588', '023_00619', '023_00637', '023_00668', '023_00695', '023_00723', '023_00740', '023_00760', '023_00777', '023_00795', '023_00825', '023_00850', '023_00870', '023_00887', '023_00911', '023_00928', '023_00950', '023_00966', '024_00013', '024_00034', '024_00053', '024_00075', '024_00100', '024_00116', '024_00139', '024_00161', '024_00181', '024_00198', '024_00225', '024_00244', '024_00272', '024_00301', '024_00348', '024_00372', '024_00391', '025_00012', '025_00030', '025_00054', '025_00070', '025_00094', '025_00118', '025_00144', '025_00175', '025_00199', '025_00226', '025_00247', '025_00269', '025_00290', '025_00315', '025_00344', '025_00381', '025_00397', '025_00426', '025_00449', '025_00480', '025_00512', '025_00557', '025_00595', '025_00613', '025_00645', '025_00679', '025_00713', '025_00745', '025_00764', '026_00002', '026_00022', '026_00041', '026_00062', '026_00083', '026_00106', '026_00131', '026_00149', '026_00187', '026_00210', '026_00240', '026_00262', '026_00293', '026_00313', '026_00341', '026_00358', '026_00376', '026_00403', '026_00419', '026_00435', '026_00454', '026_00479', '026_00495', '026_00513', '026_00545', '026_00579', '026_00596', '026_00614', '026_00636', '026_00665', '026_00684', '026_00704', '026_00727', '026_00746', '026_00762', '026_00782', '026_00799', '026_00831', '026_00852', '026_00869', '026_00885', '026_00918', '026_00948', '026_00977', '026_01008', '026_01024', '026_01042', '026_01089', '026_01117', '026_01143', '026_01166', '026_01204', '026_01223', '026_01265', '026_01284', '026_01308', '026_01335', '026_01352', '026_01373', '026_01392', '026_01437', '026_01456', '026_01474', '026_01490', '027_00003', '027_00019', '027_00053', '027_00085', '027_00113', '027_00138', '027_00168', '027_00184', '027_00216', '027_00233', '027_00250', '027_00267', '027_00285', '027_00316', '027_00338', '027_00386', '027_00408', '027_00432', '027_00451', '027_00467', '027_00492', '027_00514', '027_00536', '027_00564', '027_00583', '027_00601', '027_00621', '027_00640', '027_00689', '027_00712', '027_00730', '027_00753', '027_00771', '027_00788', '027_00809', '027_00837', '027_00858', '028_00010', '028_00046', '028_00066', '028_00091', '028_00112', '028_00156', '028_00177', '028_00203', '028_00235', '028_00254', '028_00279', '028_00314', '028_00347', '028_00365', '028_00382', '028_00411', '028_00437', '028_00455', '028_00510', '028_00548', '028_00568', '028_00598', '028_00624', '028_00667', '028_00702', '028_00743', '028_00814', '028_00846', '028_00866', '028_00896', '028_00937', '028_00970', '028_00995', '028_01049', '028_01067', '028_01087', '028_01106', '028_01122', '028_01186', '028_01225', '028_01243', '028_01270', '028_01296', '028_01322', '028_01351', '028_01377', '028_01395', '028_01420', '028_01436', '028_01453', '028_01518', '028_01539', '028_01555', '028_01583', '028_01604', '028_01631', '028_01656', '028_01677', '028_01722', '028_01738', '028_01759', '028_01785', '028_01829', '028_01878', '028_01908', '028_01945', '028_01967', '028_01995', '028_02020', '028_02039', '028_02065', '028_02081', '028_02111', '028_02135', '028_02261', '028_02286', '028_02308', '028_02335', '028_02368', '028_02392', '028_02410', '028_02427', '028_02453', '028_02479', '028_02522', '028_02548', '028_02565', '028_02581', '028_02604', '028_02620', '028_02644', '028_02661', '028_02687', '028_02735', '028_02755', '028_02779', '028_02811', '028_02850', '028_02868', '028_02894', '028_02913', '028_02943', '028_02961', '028_02984', '028_03001', '028_03017', '028_03042', '028_03067', '028_03100', '028_03126', '029_00013', '029_00038', '029_00056', '029_00073', '029_00092', '029_00111', '029_00128', '029_00158', '029_00215', '029_00245', '029_00261', '029_00282', '029_00311', '029_00333', '029_00370', '029_00406', '029_00439', '029_00456', '029_00489', '029_00535', '029_00576', '029_00609', '029_00633', '029_00651', '029_00669', '029_00690', '029_00817', '029_00841', '029_00881', '029_00898', '029_00923', '029_00939', '029_00955', '029_00991', '029_01014', '029_01033', '029_01065', '029_01107', '029_01161', '029_01185', '029_01201', '029_01220', '029_01238', '029_01258', '029_01294', '029_01329', '029_01347', '029_01364', '029_01380', '029_01417', '029_01433', '029_01460', '029_01488', '029_01510', '029_01527', '029_01559', '029_01608', '029_01668', '029_01686', '029_01705', '029_01736', '029_01756', '029_01778', '029_01806', '029_01830', '029_01849', '029_01880', '029_01896', '029_01912', '029_01933', '029_01952', '029_01986', '029_02016', '029_02032', '029_02049', '029_02078', '029_02098', '029_02125', '029_02153', '029_02172', '029_02190', '029_02211', '029_02233', '029_02251', '029_02267', '029_02293', '029_02317', '029_02341', '029_02376', '029_02404', '029_02428', '030_00018', '030_00035', '030_00074', '030_00101', '030_00122', '030_00170', '030_00188', '030_00208', '030_00231', '030_00272', '030_00288', '030_00304', '030_00324', '030_00371', '030_00390', '030_00415', '030_00447', '030_00500', '030_00526', '030_00555', '030_00578', '031_00001', '031_00017', '031_00057', '031_00090', '031_00115', '031_00147', '031_00213', '031_00230', '031_00260', '031_00318', '031_00334', '031_00353', '031_00373', '031_00422', '031_00441', '031_00465', '031_00494', '031_00539', '031_00572', '031_00591', '031_00634', '031_00670', '031_00691', '031_00718', '031_00741', '031_00798', '031_00815', '031_00833', '031_00857', '031_00875', '031_00891', '031_00930', '031_00961', '031_00987', '031_01006', '031_01030', '031_01051', '031_01088', '031_01124', '031_01150', '031_01170', '031_01192', '031_01240', '031_01279', '031_01299', '031_01317', '031_01338', '031_01358', '031_01406', '031_01469', '031_01485', '031_01508', '031_01529', '031_01553', '031_01569', '031_01587', '031_01620', '031_01637', '031_01671', '031_01703', '031_01725', '031_01758', '031_01776', '031_01792', '031_01822', '031_01862', '031_01893', '031_01909', '031_01943', '031_01969', '031_01989', '031_02015', '031_02034', '031_02068', '031_02099', '031_02117', '031_02145', '031_02178', '031_02197', '031_02228', '031_02244', '031_02291', '031_02328', '031_02344', '031_02379', '031_02401', '031_02438', '031_02464', '031_02482', '031_02506', '032_00004', '032_00031', '032_00061', '032_00082', '032_00099', '032_00117', '032_00163', '032_00225', '032_00258', '032_00278', '032_00298', '032_00322', '032_00399', '032_00458', '032_00475', '032_00503', '032_00519', '032_00567', '032_00586', '032_00603', '032_00625', '032_00655', '032_00673', '032_00722', '033_00007', '033_00047', '033_00090', '033_00189', '033_00219', '033_00261', '033_00283', '033_00340', '033_00415', '033_00512', '033_00545', '033_00605', '033_00623', '033_00730', '033_00797', '033_00827', '033_00864', '033_00887', '034_00041', '034_00057', '034_00115', '034_00132', '034_00155', '034_00172', '034_00201', '034_00225', '034_00244', '034_00279', '034_00295', '034_00312', '034_00387', '035_00084', '035_00165', '035_00245', '035_00272', '035_00291', '035_00330', '035_00412', '035_00435', '035_00535', '035_00644', '035_00694', '035_00765', '035_00787', '035_00812', '035_00852', '035_00875', '035_00951', '035_00977', '035_01051', '035_01076', '035_01106', '035_01162', '035_01253', '035_01384', '035_01409', '035_01460', '035_01502', '035_01561', '035_01709', '036_00058', '036_00091', '036_00111', '036_00142', '036_00196', '036_00212', '036_00239', '036_00294', '036_00374', '036_00396', '036_00416', '036_00442', '036_00500', '036_00543', '036_00576', '036_00661', '036_00702', '036_00722', '036_00798', '036_00824', '036_00909', '036_00956', '036_00989', '036_01049', '036_01068', '036_01086', '036_01135', '036_01165', '036_01186', '036_01217', '036_01254', '036_01276', '036_01294', '036_01310', '036_01340', '036_01358', '036_01378', '036_01400', '036_01423', '036_01440', '036_01464', '036_01488', '036_01535', '036_01559', '036_01576', '036_01599', '036_01619', '036_01644', '036_01665', '036_01701', '036_01742', '036_01775', '036_01794', '036_02011', '036_02047', '036_02069', '036_02097', '036_02163', '036_02182', '036_02208', '036_02238', '036_02271', '036_02310', '036_02328', '036_02344', '036_02364', '036_02405', '036_02435', '036_02457', '036_02478', '036_02497', '036_02575', '036_02597', '036_02618', '036_02637', '036_02673', '036_02698', '036_02718', '036_02751', '037_00118', '037_00235', '037_00275', '037_00304', '037_00320', '037_00405', '037_00436', '037_00468', '037_00519', '037_00550', '037_00572', '037_00596', '037_00622', '037_00656', '037_00690', '037_00716', '037_00740', '037_00843', '037_00869', '037_00957', '037_01131', '037_01203', '037_01239', '037_01264', '037_01468', '037_01499', '037_01556', '037_01626', '037_01646', '037_01728', '037_01773', '037_01799', '037_01861', '037_01908', '037_01935', '037_01959', '037_02027', '037_02060', '037_02079', '037_02141', '037_02170', '037_02187', '037_02205', '037_02232', '037_02291', '037_02365', '037_02399', '037_02464', '037_02487', '037_02507', '037_02533', '038_00012', '038_00032', '038_00102', '038_00149', '038_00177', '038_00232', '038_00257', '038_00297', '038_00316', '038_00358', '038_00388', '038_00419', '038_00477', '038_00504', '038_00548', '038_00566', '038_00627', '038_00646', '038_00680', '038_00697', '039_00067', '039_00097', '039_00117', '039_00140', '039_00170', '039_00192', '039_00208', '039_00246', '039_00266', '039_00305', '039_00322', '039_00356', '039_00391', '039_00415', '039_00533', '039_00553', '039_00587', '039_00607', '039_00651', '039_00674', '039_00691', '039_00714', '039_00733', '040_00013', '040_00047', '040_00075', '040_00101', '040_00154', '040_00218', '040_00267', '040_00308', '040_00364', '040_00386', '040_00404', '040_00453', '040_00479', '040_00509', '040_00532', '041_00028', '041_00052', '041_00080', '041_00098', '041_00119', '041_00175', '041_00196', '041_00214', '041_00237', '041_00270', '041_00304', '041_00333', '041_00376', '041_00400', '041_00420', '041_00565', '041_00592', '041_00634', '041_00662', '041_00679', '041_00704', '041_00722', '041_00765', '041_00789', '041_00812', '041_00841', '041_00916', '041_00969', '041_01029', '041_01049', '041_01072', '041_01103', '041_01141', '041_01167', '041_01204', '041_01223', '041_01282', '041_01352', '041_01440', '041_01456', '041_01505', '041_01529', '041_01551', '041_01603', '041_01629', '041_01645', '042_00008', '042_00027', '042_00055', '042_00100', '042_00126', '042_00162', '042_00180', '042_00202', '042_00238', '042_00276', '042_00315', '042_00341', '042_00357', '042_00431', '042_00449', '043_00011', '043_00029', '043_00049', '043_00093', '043_00165', '043_00184', '043_00210', '043_00228', '043_00253', '043_00275', '043_00302', '043_00392', '043_00412', '043_00433', '043_00451', '043_00512', '043_00528', '043_00568', '043_00613', '043_00642', '043_00703', '043_00767', '043_00826', '043_00843', '043_00863', '043_00895', '043_00921', '043_00940', '043_00965', '044_00009', '044_00081', '044_00109', '044_00130', '044_00148', '044_00165', '044_00182', '044_00204', '044_00226', '044_00268', '044_00284', '044_00300', '044_00318', '044_00338', '044_00359', '044_00383', '044_00414', '044_00431', '044_00454', '044_00508', '044_00529', '044_00545', '044_00571', '044_00608', '044_00632', '044_00662', '044_00684', '044_00701', '044_00725', '044_00742', '044_00758', '044_00800', '044_00843', '044_00860', '044_00877', '044_00893', '044_00934', '044_00969', '044_00992', '044_01013', '044_01067', '044_01088', '044_01106', '044_01123', '044_01144', '044_01163', '044_01181', '044_01201', '044_01218', '044_01240', '044_01267', '044_01283', '044_01299', '044_01319', '044_01367', '044_01396', '044_01425', '044_01446', '044_01467', '044_01485', '044_01508', '044_01529', '044_01549', '044_01571', '044_01588', '044_01610', '044_01643', '044_01671', '044_01699', '044_01723', '044_01742', '044_01765', '044_01783', '044_01799', '044_01833', '044_01854', '044_01883', '044_01902', '044_01925', '045_00003', '045_00019', '045_00038', '045_00054', '045_00070', '045_00089', '045_00120', '045_00155', '045_00176', '045_00194', '046_00001', '046_00020', '046_00036', '046_00059', '046_00077', '046_00097', '046_00115', '046_00150', '046_00169', '046_00195', '046_00213', '046_00242', '046_00266', '046_00282', '046_00302', '046_00321', '046_00339', '046_00364', '046_00408', '046_00425', '046_00451', '046_00496', '046_00514', '046_00532', '046_00559', '046_00587', '046_00617', '046_00633', '046_00660', '046_00679', '046_00707', '046_00724', '046_00753', '046_00780', '046_00802', '046_00819', '046_00837', '046_00857', '046_00879', '046_00910', '046_00931', '046_00947', '046_00994', '046_01016', '046_01040', '046_01057', '046_01077', '046_01108', '046_01129', '046_01147', '046_01192', '046_01214', '046_01239', '046_01293', '046_01313', '047_00045', '047_00064', '047_00092', '047_00112', '047_00186', '047_00209', '047_00248', '047_00264', '047_00283', '047_00342', '047_00380', '047_00428', '047_00444', '047_00462', '047_00504', '047_00524', '047_00543', '047_00573', '047_00604', '047_00622', '047_00639', '047_00658', '047_00690', '047_00711', '047_00728', '047_00759', '047_00785', '047_00805', '047_00834', '047_00862', '047_00889', '047_00926', '047_00942', '047_00962', '047_00981', '047_00998', '047_01038', '047_01055', '047_01072', '047_01099', '047_01130', '047_01160', '047_01185', '047_01209', '047_01226', '047_01242', '047_01269', '047_01291', '047_01309', '047_01327', '047_01343', '047_01377', '047_01394', '047_01412', '047_01431', '047_01447', '047_01464', '047_01492', '047_01524', '047_01550', '047_01578', '047_01601', '047_01627', '047_01650', '047_01678', '047_01703', '047_01719', '047_01745', '047_01761', '047_01778', '047_01797', '047_01836', '047_01869', '047_01886', '047_01927', '047_01977', '047_02003', '047_02021', '047_02050', '047_02070', '047_02086', '047_02111', '047_02141', '047_02173', '047_02201', '047_02232', '047_02259', '047_02279', '047_02311', '047_02328', '047_02350', '047_02374', '047_02390', '047_02407', '047_02423', '047_02439', '047_02458', '047_02474', '047_02492', '047_02509', '047_02529', '047_02545', '047_02565', '047_02582', '047_02609', '047_02638', '047_02663', '047_02681', '047_02701', '047_02727', '047_02746', '047_02772', '047_02800', '047_02816', '047_02849', '047_02867', '047_02885', '047_02902', '047_02935', '047_02956', '047_02972', '047_03000', '047_03020', '047_03037', '047_03055', '047_03073', '047_03099', '047_03139', '047_03158', '047_03174', '047_03193', '047_03223', '047_03246', '048_00066', '048_00086', '048_00105', '048_00122', '048_00138', '048_00154', '048_00170', '048_00197', '048_00216', '048_00240', '048_00269', '048_00285', '048_00309', '048_00335', '048_00351', '048_00377', '048_00397', '048_00447', '048_00473', '049_00035', '049_00053', '049_00083', '049_00099', '049_00123', '049_00161', '049_00178', '049_00211', '049_00227', '049_00288', '049_00306', '049_00392', '049_00418', '049_00443', '049_00467', '049_00486', '049_00653', '049_00670', '049_00724', '049_00756', '049_00809', '049_00877', '049_00925', '049_00952', '049_00978', '049_00996', '049_01018', '049_01043', '049_01092', '049_01133', '049_01170', '050_00034', '050_00077', '050_00139', '050_00169', '050_00233', '050_00300', '050_00344', '050_00390', '050_00478', '050_00524', '050_00551', '050_00570', '050_00640', '050_00682', '050_00707', '050_00748', '050_00784', '050_00963', '050_00984', '050_01044', '050_01062', '050_01078', '050_01123', '050_01141', '050_01189', '050_01215', '050_01234', '050_01285', '050_01307', '050_01328', '050_01356', '050_01376', '050_01405', '051_00095', '051_00112', '051_00216', '051_00297', '051_00315', '051_00496', '051_00528', '051_00548', '051_00612', '051_00643', '051_00691', '051_00825', '051_00865', '051_00899', '052_00004', '052_00031', '052_00242', '052_00281', '052_00358', '052_00391', '052_00516', '052_00699', '052_00720', '052_00774', '052_00833', '052_00854', '052_00884', '052_00928', '052_01022', '052_01042', '052_01139', '052_01160', '052_01181', '052_01233', '052_01252', '052_01297', '052_01336', '052_01416', '052_01447', '052_01544', '052_01611', '052_01685', '052_01718', '052_01736', '052_01779', '052_01802', '052_01838', '052_01886', '052_01961', '052_02004', '052_02023', '052_02057', '052_02093', '052_02169', '052_02189', '052_02219', '052_02290', '052_02315', '052_02337', '052_02380', '052_02410', '052_02465', '052_02496', '052_02517', '052_02549', '052_02604', '052_02660', '052_02708', '052_02733', '052_02803', '052_02875', '052_02905', '052_02953', '052_02986', '052_03039', '052_03071', '052_03094', '052_03140', '052_03164', '052_03182', '052_03215', '052_03237', '052_03544', '052_03567', '052_03584', '052_03608', '052_03639', '052_03664', '052_03690', '052_03740', '052_03756', '052_03773', '052_03795', '052_03823', '052_03856', '052_03874', '053_00014', '053_00056', '053_00096', '053_00145', '053_00168', '053_00227', '053_00250', '053_00269', '053_00293', '053_00309', '053_00330', '053_00362', '053_00426', '053_00452', '053_00475', '053_00530', '053_00551', '053_00575', '053_00610', '053_00644', '053_00710', '053_00734', '053_00817', '053_00853', '053_00870', '053_00887', '053_00912', '054_00034', '054_00063', '054_00083', '054_00105', '054_00151', '054_00288', '054_00321', '054_00352', '054_00390', '054_00417', '054_00457', '054_00499', '054_00516', '054_00547', '054_00580', '054_00600', '054_00631', '054_00692', '054_00726', '054_00750', '054_00783', '054_00850', '054_00874', '054_00944', '054_00960', '054_00976', '054_00998', '054_01041', '054_01083', '054_01105', '055_00023', '055_00053', '055_00088', '055_00141', '055_00199', '055_00221', '055_00271', '055_00389', '055_00443', '055_00476', '055_00534', '055_00590', '055_00617', '055_00660', '055_00689', '055_00773', '055_00796', '055_00832', '055_00867', '055_00978', '055_01008', '055_01086', '055_01149', '055_01218', '055_01254', '055_01278', '055_01304', '055_01333', '055_01367', '055_01396', '055_01418', '055_01449', '056_00018', '056_00061', '056_00078', '056_00099', '056_00121', '056_00144', '056_00160', '056_00254', '056_00284', '056_00360', '056_00497', '056_00555', '056_00573', '057_00006', '057_00043', '057_00074', '057_00111', '057_00172', '057_00263', '057_00313', '057_00366', '057_00398', '057_00450', '057_00482', '057_00501', '057_00531', '057_00609', '057_00635', '058_00004', '058_00022', '058_00038', '058_00058', '058_00086', '058_00113', '058_00133', '058_00156', '058_00174', '058_00209', '058_00255', '058_00282', '058_00318', '058_00355', '058_00375', '059_00073', '059_00124', '059_00223', '059_00243', '059_00259', '059_00299', '059_00326', '059_00354', '059_00381', '059_00403', '059_00444', '059_00503', '059_00520', '059_00569', '059_00585', '059_00604', '059_00624', '059_00640', '059_00665', '059_00681', '059_00713', '060_00109', '060_00132', '060_00148', '060_00179', '060_00201', '060_00241', '060_00289', '060_00325', '060_00346', '060_00373', '060_00395', '060_00411', '060_00432', '060_00448', '060_00492', '060_00537', '060_00560', '060_00589', '060_00623', '060_00639']


def _get_test_frames():
	return _get_flow_test_frames() + ['005_00025', '022_02193', '023_00991', '042_00485', '048_00500', '053_00935']


def _get_test_frame_paths(path, ext):
	return [path / (f + ext) for f in _get_test_frames()]


def _get_instance_clsids():
	return [13,16,17,19,20,23,24,25,26,27]


def encode(outpath, app_path, frame_path):
	""" Encodes frames to a binary submission file.
		Needed for optical flow and monodepth."""

	app_dst_path    = frame_path / app_path.name
	submission_path = frame_path / 'submission.bin'

	shutil.copy(app_path, app_dst_path)
	os.system('cd %s; ./%s' % (frame_path, app_path.name))
	
	if submission_path.exists():
		shutil.move(submission_path, outpath)
		return True
	return False


def zip(outpath, files):
	with zipfile.ZipFile(outpath, 'w', compression=zipfile.ZIP_DEFLATED) as archive:
		for file in files:
			archive.write(file)
			pass
		pass
	pass

	
def _check_frames(path, frame_paths):

	print('Checking for frames ...', end='',  flush=True)
	missing = [p for p in frame_paths if not p.exists()]
	
	if not missing:
		print('Ok')
		return True
	else:
		ready_for_submission = False
		print('Missing')
		print('\tMissing frames (%d in total):' % (len(missing)))
		for f in missing:
			print('\t\t%s' % f)
			pass
		return False
	return False


def check_cls_submission(path):
	"""Checks if all files required for the submission exist and are in the right format."""

	ready_for_submission = True
	ready_for_submission = ready_for_submission and _check_frames(path, _get_test_frame_paths(path, '.png'))
	return ready_for_submission


def finalize_cls_submission(path, outpath):
	"""Creates a submittable file for semantic class segmentations."""

	if check_cls_submission(path):
		print('Preparing submission ...', end='', flush=True)
		
		files = _get_test_frame_paths(path, '.png')
		
		submission_path = outpath if outpath is not None else (path / 'cls_submission.zip')
		zip(submission_path, files)
		
		print('Ok')
		print('Submission file is "%s". Please upload it at "https://playing-for-benchmarks.org"' % submission_path)
		pass
	else:
		print('Files are not ready for a submission yet.')
		pass
	return


def _parse_instance_supp(path):
	""" Parses the user-provided instances.csv file for an instance segmentation submission. 
		The file should list all predicted instances and correspond to images depicting individual instance masks.
	"""

	fieldnames = ['sequence', 'frame_id' , 'class_id', 'instance_id', 'score']

	frames = {}
	with open(path / 'instances.csv') as csvfile:
		sample = csvfile.read(1024)
		csvfile.seek(0)
		sniffer = csv.Sniffer()
		tab = csv.DictReader(csvfile, \
			fieldnames=(None if sniffer.has_header(sample) else fieldnames), \
			dialect=sniffer.sniff(sample))
		for row in tab:
			frame_id   = '%03d_%05d' % (int(row['sequence']), int(row['frame_id']))
			frame_path = path / ('%s_%d_%d.png' % (frame_id, int(row['class_id']), int(row['instance_id'])))
			if frame_id not in frames:
				frames[frame_id] = [frame_path]
			else:
				frames[frame_id].append(frame_path)
				pass
			pass
		pass
	return frames


def _print_inst_format():
	print('\tThe file should be a CSV with the following columns: "sequence", "frame_id", "class_id", "instance_id", "score".')
	print('\tEach row should correspond to a png file "<sequence>_<frame_id>_<class_id>_<instance_id>.png" depicting an individual instance.')
	pass


def check_inst_submission(path):
	"""Checks if all files required for the submission exist and are in the right format."""

	# check if path contains a predictions.json
	inst_path = path / 'instances.csv'

	print('Checking for "instances.csv" ... ', end='',  flush=True)
	if inst_path.exists():
		print('Ok')		
	else:
		ready_for_submission = False
		print('Missing.')
		print('\tThe file "%s" does not exist. It is required for a submission and should list all predicted instances.' % inst_path)
		_print_inst_format()
		return False, None
	pass

	frames  = _parse_instance_supp(path)
	
	print('Checking for frames ... ', end='',  flush=True)
	missing = [p for f,ps in frames.items() for p in ps if not p.exists()]
		
	if not missing:
		print('Ok')
		return True, frames
	else:
		print('Missing')
		print('\tThere is a mismatch between entries in "instances.csv" and instance masks.')
		print('\tNo masks found for %d instances:' % (len(missing)))
		for f in missing:
			print('\t\t%s' % f)
			pass
		return False, None
	return False, None


def finalize_inst_submission(path, outpath):
	"""Creates a submittable file for semantic class segmentations."""

	ready_for_submission, inst_files = check_inst_submission(path)
	if ready_for_submission:
		print('Preparing submission ...', end='', flush=True)
		
		files = [f for k,v in inst_files.items() for f in v]
		
		submission_path = outpath if outpath is not None else (path / 'inst_submission.zip')
		zip(submission_path, files)
		
		print('Ok')
		print('Submission file is "%s". Please upload it at "https://playing-for-benchmarks.org"' % submission_path)
		pass
	else:
		print('Files are not ready for a submission yet.')
		pass
	return


def check_flow_submission(path):
	"""Checks if all files required for the submission exist and are in the right format."""

	ready_for_submission = True
	ready_for_submission = ready_for_submission and _check_frames(path, [path / (f + '.flo') for f in _get_flow_test_frames()])
	return ready_for_submission


def finalize_flow_submission(path, outpath):
	"""Creates a submittable file for optical flow segmentations."""

	if check_flow_submission(path):
		print('Preparing submission ...', end='', flush=True)
		
		files = [path / (f + '.flo') for f in _get_flow_test_frames()]
		
		submission_path = outpath if outpath is not None else (path / 'flow_submission.bin')
		if encode(submission_path, pathlib.Path('./encode_flow_submission'), path):
			print('Ok')
			print('Submission file is "%s". Please upload it at "https://playing-for-benchmarks.org"' % submission_path)
		else:
			print('Failed')
			print('\tEncoding the submission files failed.')
			pass
		pass
	else:
		print('Files are not ready for a submission yet.')
		pass
	return


def check_depth_submission(path):
	"""Checks if all files required for the submission exist and are in the right format."""

	ready_for_submission = True
	ready_for_submission = ready_for_submission and _check_frames(path, _get_test_frame_paths('.pfm'))
	return ready_for_submission


def finalize_depth_submission(path, outpath):
	"""Creates a submittable file for optical flow segmentations."""

	if check_flow_submission(path):
		print('Preparing submission ...', end='', flush=True)
		
		files = _get_test_frame_paths('.pfm')
		
		submission_path = outpath if outpath is not None else (path / 'depth_submission.bin')
		if encode(submission_path, pathlib.Path('./encode_depth_submission'), path):
			print('Ok')
			print('Submission file is "%s". Please upload it at "https://playing-for-benchmarks.org"' % submission_path)
		else:
			print('Failed')
			print('\tEncoding the submission files failed.')
			pass
		pass
	else:
		print('Files are not ready for a submission yet.')
		pass
	return


def check_pano_submission(path):
	"""Checks if all files required for the submission exist and are in the right format."""

	ready_for_submission = True

	# check if path contains a predictions.json
	json_path = path / 'predictions.json'

	print('Checking for "predictions.json" ... ', end='',  flush=True)
	if json_path.exists():
		print('Ok')
	else:
		ready_for_submission = False
		print('Missing.')
		print('\tThe file "%s" does not exist. It is required for a submission. We are following the COCO Panoptic segmentation format ("http://cocodataset.org/#format-data" (4. Panoptic segmentation)".' % json_path)
		pass
	pass

	ready_for_submission = ready_for_submission and _check_frames(path, _get_test_frame_paths(path, '.png'))
	
	return ready_for_submission


def finalize_pano_submission(path, outpath):
	"""Creates a submittable file for panoptic segmentations."""

	if check_pano_submission(path):
		print('Preparing submission ...', end='', flush=True)
		
		files = [path / 'predictions.json'] + _get_test_frame_paths(path, '.png')
		
		submission_path = outpath if outpath is not None else (path / 'pano_submission.zip')
		zip(submission_path, files)

		print('Ok')
		print('Submission file is "%s". Please upload it at "https://playing-for-benchmarks.org"' % submission_path)
		pass
	else:
		print('Files are not ready for a submission yet.')
		pass
	return


if __name__ == '__main__':

	task2func = {'cls':finalize_cls_submission, 'pano':finalize_pano_submission, 'depth':finalize_depth_submission, 'flow':finalize_flow_submission, 'inst':finalize_inst_submission}

	p = argparse.ArgumentParser('')
	p.add_argument('task', type=str, choices=task2func.keys(), help='Task for which a submission should be prepared.')
	p.add_argument('path', type=pathlib.Path, help='Folder containing all files to be included in the submission.')
	p.add_argument('-o', '--out', type=pathlib.Path, help='Output path to submission file.', default=None)
	args = p.parse_args()

	task2func[args.task](args.path, args.out)
	pass
